{"ast":null,"code":"const axios = require(\"axios\");\nconst FormData = require(\"form-data\");\n\n/**\r\n * Send WhatsApp message using Twilio API\r\n * @param {String} to - Recipient phone number (with country code)\r\n * @param {String} message - Message content\r\n * @returns {Promise} - API response\r\n */\nconst sendWhatsAppMessage = async (to, message) => {\n  try {\n    console.log(\"Attempting to send WhatsApp message to:\", to);\n\n    // Format phone number (ensure it has country code)\n    let formattedNumber = to;\n    if (!to.startsWith(\"+\")) {\n      // Add India country code if not present\n      formattedNumber = `+91${to.replace(/\\D/g, \"\")}`;\n    }\n    console.log(\"Formatted number:\", formattedNumber);\n    console.log(\"Message:\", message);\n\n    // Check if Twilio credentials are available\n    if (!process.env.TWILIO_SID || !process.env.TWILIO_AUTH_TOKEN || !process.env.TWILIO_PHONE_NUMBER) {\n      console.error(\"Twilio credentials not found in environment variables\");\n      throw new Error(\"Twilio credentials not configured\");\n    }\n\n    // Construct the Twilio API URL\n    const twilioApiUrl = `https://api.twilio.com/2010-04-01/Accounts/${process.env.TWILIO_SID}/Messages.json`;\n\n    // Make API request\n    const response = await axios({\n      method: \"post\",\n      url: twilioApiUrl,\n      data: new URLSearchParams({\n        To: `whatsapp:${formattedNumber}`,\n        From: `${process.env.TWILIO_PHONE_NUMBER}`,\n        Body: message\n      }),\n      auth: {\n        username: process.env.TWILIO_SID,\n        password: process.env.TWILIO_AUTH_TOKEN\n      }\n    });\n    console.log(\"WhatsApp message sent successfully:\", response.data.sid);\n    return response.data;\n  } catch (error) {\n    console.error(\"WhatsApp API Error:\", error.response ? error.response.data : error.message);\n    throw error;\n  }\n};\n\n// Add a test function to verify WhatsApp configuration\nconst testWhatsAppConfiguration = async () => {\n  try {\n    console.log(\"Testing WhatsApp configuration...\");\n    console.log(\"TWILIO_SID:\", process.env.TWILIO_SID ? \"✓ Set\" : \"✗ Not set\");\n    console.log(\"TWILIO_AUTH_TOKEN:\", process.env.TWILIO_AUTH_TOKEN ? \"✓ Set\" : \"✗ Not set\");\n    console.log(\"TWILIO_PHONE_NUMBER:\", process.env.TWILIO_PHONE_NUMBER ? \"✓ Set\" : \"✗ Not set\");\n    if (!process.env.TWILIO_SID || !process.env.TWILIO_AUTH_TOKEN || !process.env.TWILIO_PHONE_NUMBER) {\n      console.error(\"Twilio credentials not properly configured\");\n      return false;\n    }\n    return true;\n  } catch (error) {\n    console.error(\"Error testing WhatsApp configuration:\", error);\n    return false;\n  }\n};\nmodule.exports = {\n  sendWhatsAppMessage,\n  testWhatsAppConfiguration\n};","map":{"version":3,"names":["axios","require","FormData","sendWhatsAppMessage","to","message","console","log","formattedNumber","startsWith","replace","process","env","TWILIO_SID","TWILIO_AUTH_TOKEN","TWILIO_PHONE_NUMBER","error","Error","twilioApiUrl","response","method","url","data","URLSearchParams","To","From","Body","auth","username","password","sid","testWhatsAppConfiguration","module","exports"],"sources":["C:/Users/Admin/CSE_Projects/beauty/frontend/src/utils/whatsapp.js"],"sourcesContent":["const axios = require(\"axios\")\r\nconst FormData = require(\"form-data\")\r\n\r\n/**\r\n * Send WhatsApp message using Twilio API\r\n * @param {String} to - Recipient phone number (with country code)\r\n * @param {String} message - Message content\r\n * @returns {Promise} - API response\r\n */\r\nconst sendWhatsAppMessage = async (to, message) => {\r\n  try {\r\n    console.log(\"Attempting to send WhatsApp message to:\", to)\r\n\r\n    // Format phone number (ensure it has country code)\r\n    let formattedNumber = to\r\n    if (!to.startsWith(\"+\")) {\r\n      // Add India country code if not present\r\n      formattedNumber = `+91${to.replace(/\\D/g, \"\")}`\r\n    }\r\n\r\n    console.log(\"Formatted number:\", formattedNumber)\r\n    console.log(\"Message:\", message)\r\n\r\n    // Check if Twilio credentials are available\r\n    if (!process.env.TWILIO_SID || !process.env.TWILIO_AUTH_TOKEN || !process.env.TWILIO_PHONE_NUMBER) {\r\n      console.error(\"Twilio credentials not found in environment variables\")\r\n      throw new Error(\"Twilio credentials not configured\")\r\n    }\r\n\r\n    // Construct the Twilio API URL\r\n    const twilioApiUrl = `https://api.twilio.com/2010-04-01/Accounts/${process.env.TWILIO_SID}/Messages.json`\r\n\r\n    // Make API request\r\n    const response = await axios({\r\n      method: \"post\",\r\n      url: twilioApiUrl,\r\n      data: new URLSearchParams({\r\n        To: `whatsapp:${formattedNumber}`,\r\n        From: `${process.env.TWILIO_PHONE_NUMBER}`,\r\n        Body: message,\r\n      }),\r\n      auth: {\r\n        username: process.env.TWILIO_SID,\r\n        password: process.env.TWILIO_AUTH_TOKEN,\r\n      },\r\n    })\r\n\r\n    console.log(\"WhatsApp message sent successfully:\", response.data.sid)\r\n    return response.data\r\n  } catch (error) {\r\n    console.error(\"WhatsApp API Error:\", error.response ? error.response.data : error.message)\r\n    throw error\r\n  }\r\n}\r\n\r\n// Add a test function to verify WhatsApp configuration\r\nconst testWhatsAppConfiguration = async () => {\r\n  try {\r\n    console.log(\"Testing WhatsApp configuration...\")\r\n    console.log(\"TWILIO_SID:\", process.env.TWILIO_SID ? \"✓ Set\" : \"✗ Not set\")\r\n    console.log(\"TWILIO_AUTH_TOKEN:\", process.env.TWILIO_AUTH_TOKEN ? \"✓ Set\" : \"✗ Not set\")\r\n    console.log(\"TWILIO_PHONE_NUMBER:\", process.env.TWILIO_PHONE_NUMBER ? \"✓ Set\" : \"✗ Not set\")\r\n\r\n    if (!process.env.TWILIO_SID || !process.env.TWILIO_AUTH_TOKEN || !process.env.TWILIO_PHONE_NUMBER) {\r\n      console.error(\"Twilio credentials not properly configured\")\r\n      return false\r\n    }\r\n\r\n    return true\r\n  } catch (error) {\r\n    console.error(\"Error testing WhatsApp configuration:\", error)\r\n    return false\r\n  }\r\n}\r\n\r\nmodule.exports = {\r\n  sendWhatsAppMessage,\r\n  testWhatsAppConfiguration,\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}